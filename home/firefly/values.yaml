firefly-iii:
  replicaCount: 1

  image:
    repository: "fireflyiii/core"
    pullPolicy: IfNotPresent
    tag: version-5.6.14

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  persistence:
    # -- If you set this to false, uploaded attachments are not stored persistently and will be lost with every restart of the pod
    enabled: true
    class: "longhorn"
    accessModes: ReadWriteOnce
    storage: 1Gi
    # -- If you want to use an existing claim, set it here
    existingClaim: ""

  # -- Environment variables for Firefly III. See docs at: https://github.com/firefly-iii/firefly-iii/blob/main/.env.example
  config:
    # -- Set this to the name of a secret to load environment variables from. If defined, values in the secret will override values in config.env
    existingSecret: "firefly-iii-secret"

    # -- Directly defined environment variables. Use this for non-secret configuration values.
    env:
      DEFAULT_LANGUAGE: "nl_NL"
      DEFAULT_LOCALE: "equal"
      TZ: "Europe/Amsterdam"
      TRUSTED_PROXIES: "**"

  # -- A cronjob for [recurring Firefly III tasks](https://docs.firefly-iii.org/firefly-iii/advanced-installation/cron/).
  cronjob:
    # -- Set to true to enable the CronJob. Note that you need to specify either cronjob.auth.existingSecret or cronjob.auth.token for it to actually be deployed.
    enabled: true

    # -- Authorization for the CronJob. See https://docs.firefly-iii.org/firefly-iii/advanced-installation/cron/#request-a-page-over-the-web
    auth:
      # -- The name of a secret containing a data.token field with the cronjob token
      existingSecret: "firefly-iii-cron-secret"

      # -- The token in plain text
      token: ""

    # -- Annotations for the CronJob
    annotations: {}

    # -- When to run the CronJob. Defaults to 03:00 as this is when Firefly III executes regular tasks.
    schedule: "0 3 * * *"

    # -- How many pods to keep around for successful jobs
    successfulJobsHistoryLimit: 3

    # -- How many pods to keep around for failed jobs
    failedJobsHistoryLimit: 1

    # -- How to treat failed jobs
    restartPolicy: OnFailure

    image:
      repository: curlimages/curl
      pullPolicy: IfNotPresent
      tag: 7.83.1

    imagePullSecrets: []

    podAnnotations: {}

    securityContext: {}

    podSecurityContext: {}

    resources: {}

    nodeSelector: {}

    tolerations: []

    affinity: {}

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod

    hosts:
      - firefly.jupiter.mein.nl
    tls:
     - secretName: firefly-tls-certificate
       hosts:
         - firefly.jupiter.mein.nl

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

importer: 

  replicaCount: 1

  # -- The proxies that are trusted by the importer
  trustedProxies: "**"

  fireflyiii:
    # -- The URL at which Firefly III is available. If you change this value, click the "Reauthenticate" button on the importer after opening it!
    url: "http://firefly-firefly-iii:80"

    # -- The URL at which you access Firefly III. Check https://docs.firefly-iii.org/data-importer/install/configure/#configure-fidi to find out if you should set this.
    vanityUrl: ""

    auth:
      # -- If you specify an existingSecret, it has to have the accessToken in a .spec.data.accessToken
      existingSecret: "firefly-iii-importer-secret"

      # -- The access token in plain text
      accessToken: ""

  image:
    repository: fireflyiii/data-importer
    pullPolicy: IfNotPresent
    tag: "version-0.8.0"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod

    hosts:
      - importer.firefly.mein.jupiter.nl
    tls:
     - secretName: firefly-importer-tls-certificate
       hosts:
         - importer.firefly.mein.jupiter.nl

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}