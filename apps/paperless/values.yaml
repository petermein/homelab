paperless:

  env:
    # -- Project name
    COMPOSE_PROJECT_NAME: paperless
    # -- Redis to use
    PAPERLESS_REDIS: redis://redis-master.redis:6379
    # -- OCR languages to install
    PAPERLESS_OCR_LANGUAGE: eng
    PAPERLESS_TIME_ZONE: "Europe/Amsterdam"
    # USERMAP_UID: 1000
    # USERMAP_GID: 1000
    # PAPERLESS_TIME_ZONE: Europe/London
    # -- Database host to use
    PAPERLESS_DBHOST: postgresql.postgresql
    # -- Port to use
    PAPERLESS_PORT: 8000

  envFrom: 
    - secretRef:
        name: paperless-secret

  persistence:
    # -- Configure persistence for data.
    # @default -- See values.yaml
    data:
      enabled: true
      mountPath: /usr/src/paperless/data
      accessMode: ReadWriteOnce
      storageClass: "longhorn"
      size: 1Gi

    # -- Configure persistence for media.
    # @default -- See values.yaml
    media:
      enabled: true
      mountPath: /usr/src/paperless/media
      accessMode: ReadWriteOnce
      storageClass: "longhorn"
      size: 1Gi

    # -- Configure volume to monitor for new documents.
    # @default -- See values.yaml
    consume:
      enabled: true
      mountPath: /usr/src/paperless/consume
      accessMode: ReadWriteMany
      storageClass: "longhorn"
      size: 1Gi

    # -- Configure export volume.
    # @default -- See values.yaml

    export:
      enabled: true
      mountPath: /usr/src/paperless/export
      accessMode: ReadWriteOnce
      storageClass: "longhorn"
      size: 1Gi

  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/exclude: 'true'
      hosts:
        - host: &host paperless.jupiter.mein.nl
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: paperless-tls-certificate
          hosts:
            - *host

  postgresql:
    enabled: false

  sftp:
    # Default values for sftp.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    replicaCount: 1

    image:
      repository: emberstack/sftp
      tag: ""
      pullPolicy: Always

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    configuration: null

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name:

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    storage:
      volumeMounts: []
      volumes: []

    initContainers: []

    service:
      type: ClusterIP
      port: 22

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}