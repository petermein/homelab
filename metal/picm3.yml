# - name: Stage one
#   hosts:
#     - picm3
#   become: yes
#   gather_facts: no

#   vars:
#     ansible_user: pi
#     ansible_ssh_pass: raspberry
#     timezone: Europe/Amsterdam

#   vars_prompt:
#     - name: "password"
#       prompt: "Enter password for root user"
#       private: yes

#   tasks:
#     - name: Ping all hosts
#       ping:

#     - name: Print
#       debug:
#         msg: "All hosts are up"

#     - name: Set hostname
#       hostname:
#         name: "{{ inventory_hostname }}"

#     - name: Set the timezone
#       file:
#         src: /usr/share/zoneinfo/{{ timezone }}
#         dest: /etc/localtime
#         state: link

#     - name: Set authorized_key for root user
#       authorized_key:
#         user: root
#         state: present
#         key: "{{ lookup('file', '~/.ssh/id_ed25519.pub') }}"

#     - name: Set the password for root
#       ansible.builtin.user:
#         name: root
#         state: present
#         password: "{{ password | password_hash('sha512') }}"

#     - name: Enable root login
#       lineinfile:
#         path: /etc/ssh/sshd_config
#         regexp: "^PermitRootLogin"
#         line: "PermitRootLogin yes"
#         state: present

#     - name: Restart ssh daemon
#       service:
#         name: sshd
#         state: restarted

#     - name: Disable the default user 'pi'
#       user:
#         name: pi
#         state: present
#         password_lock: true
#         shell: "/sbin/nologin"

#     - name: Reboot host and wait for it to restart
#       reboot:
#         msg: "Reboot initiated by Ansible"
#         connect_timeout: 5
#         reboot_timeout: 600
#         pre_reboot_delay: 0
#         post_reboot_delay: 30
#         test_command: whoami

- name: Stage two
  hosts:
    - picm3
  become: yes
  gather_facts: no

  vars:
    timezone: Europe/Amsterdam

  tasks:
    - name: Enable container features
      replace:
        path: /boot/cmdline.txt
        regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
        replace: '\1 {{ item }}'
      with_items:
        - "cgroup_enable=cpuset"
        - "cgroup_memory=1"
        - "cgroup_enable=memory"

    - name: Reboot
      ansible.builtin.reboot:
